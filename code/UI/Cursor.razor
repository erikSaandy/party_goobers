@using System;
@using Sandbox;
@using Sandbox.UI;
@attribute [StyleSheet]
@inherits PanelComponent

<root class="container @(Visible ? "visible" : "")">

	<div class="cursor @(IsGhost ? "ghost" : "")" style="transform: rotate(@(Tilt)deg) translate(-25%, -15%);" @ref="CursorPanel">
		<div class="crown @(HasCrown?"visible" : "")">👑</div>
	<div/>

</root>

@code
{
	bool HasCrown => ScoreBoard.GetPositioning(Owner) == 0;

	[Property] public Player Owner { get; private set; }

	public bool Visible { get; private set; } = true;

	public bool IsGhost
	{
		get
		{
			if (IsProxy) { return true; }
			else
			{
				return (Owner.LifeState == Player.PlayerLifeState.Dead);
			}
		}
	}

	public Panel CursorPanel { get; set; }

	[Sync] public Vector2 CursorPosition { get; private set; }

	[Sync] private float Tilt { get; set; } = 0;

	public Cursor() {
		CursorPanel = new Panel();
	}

	protected override void OnStart()
	{

		if(!IsProxy) {
			Components.Get<ScreenPanel>().ZIndex = 501;
		}
	}

	protected override void OnPreRender()
	{
		base.OnUpdate();

        if(!IsProxy)
        {
            CursorPosition = Mouse.Position / Screen.Size;

            Tilt = -Mouse.Velocity.x * 2;
            Tilt = MathX.Clamp(Tilt, -20, 20);

        }

		if (Visible)
		{
			CursorPanel.Style.Left = Length.Fraction(CursorPosition.x);
			CursorPanel.Style.Top = Length.Fraction(CursorPosition.y);
		}

	}

	protected override int BuildHash()
	{
		return System.HashCode.Combine(CursorPosition, Visible, Tilt);
	}
}
