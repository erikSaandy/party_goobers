@using System;
@using Sandbox;
@using Sandbox.UI;
@attribute [StyleSheet]
@inherits Panel

<root>

	<div class="icon">@("⏰")</div>
	<div class="timer">@(TimeNowDisplay)</div>

</root>

@code
{
	[Sync] public static bool IsRunning { get; private set; } = false;

	[Sync] private static float TimeSinceStarted { get; set; } = 0;

	[Sync] private static float TargetTime { get; set; } = 0;

	private static float TimeNow => IsRunning ? (TargetTime - TimeSinceStarted) : 0;
	private static string TimeNowDisplay => (MathF.Max(TimeNow, 0f) + 0.4f).ToString("0");

	public static Action OnTimerDepleted { get; set; }
	public static Action OnTimerStarted { get; set; }

	public LevelTimer() { }

	public override void Tick()
	{
		base.Tick();

		if(IsRunning)
		{
			TimeSinceStarted += Time.Delta;

			if(TimeNow <= -1f)
			{
				OnTimerDepleted?.Invoke();
				IsRunning = false;
			}
		}

	}

	[Broadcast]
	public static void Start(float targetTime = 15)
	{
		TargetTime = targetTime;
		TimeSinceStarted = 0;
		IsRunning = true;

		OnTimerStarted?.Invoke();


	}

	protected override int BuildHash()
	{
		return System.HashCode.Combine(TimeNow);
	}
}
