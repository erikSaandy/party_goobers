@using System;
@using Sandbox;
@using Sandbox.UI;
@attribute [StyleSheet]
@inherits PanelComponent

<root class="@(Visible ? "visible" : "")">
	<div class ="level">Level @( PartyFacesManager.Instance.RoundNumber )</div>

	<div class="objective">

		@if(Objective != null) 
		{
			switch( Objective )
			{
				case FindSpecificObjective : 
			
				<div class="title">Find this goober!</div>
				<div class ="npcicon">
					<Image class="npctexture" Texture=@NPCIconGenerator.RenderTexture/>	
				</div>
			
				return;

				case FindAlikeObjective :

                    <div class="title">Find @((Objective as FindAlikeObjective).NumberOfAlike.ToEnglish()) look-alikes!</div>

                    return;

                case FindOddObjective :

                    string suffix = (Objective as FindOddObjective).TargetNPCCount == 1 ? "" : "s";
                    <div class="title">Find @((Objective as FindOddObjective).TargetNPCCount.ToEnglish()) odd goober@(suffix)!</div>

				return;

				default : return;
			}

		}

		</div>
</root>


@code {

    public LevelObjective Objective => GetObjective();

    public static bool Visible { get; private set; } = false;

    //https://gist.github.com/CarsonKompon/be43451a518293356feca8095352614f
    //<Image class="texture" Texture=@NPCIconGenerator.RenderTexture/>

    private LevelObjective GetObjective()
    {
        if(LevelHandler.Instance.CurrentLevelData?.Objective == null)
        {
            return null;
        }

        return LevelHandler.Instance.CurrentLevelData.Objective;
    }

    protected override void OnUpdate()
    {
        base.OnUpdate();
    }

    [Broadcast]
    public static void Show()
    {
        Visible = true;
        Sound.Play("sounds/round_start.sound");
    }

    [Broadcast]
    public static void Hide()
    {
        Visible = false;
    }

    protected override int BuildHash()
    {
        return System.HashCode.Combine(Time.Now);
    }

    protected override void OnDestroy()
    {
        Visible = false;
    }

}
